# NixOS system configuration for server
# This file defines system-level settings, boot configuration, and services
{ config, pkgs, primaryUser, systemStateVersion, ... }:

{
  ##############################################################################
  # Imports
  ##############################################################################
  imports = [
    # Hardware-specific configuration (generated by nixos-generate-config)
    ./hardware-configuration.nix
  ];

  ##############################################################################
  # Nix Configuration
  ##############################################################################
  nix = {
    package = pkgs.nixFlakes;
    settings.experimental-features = [ "nix-command" "flakes" ];
  };

  # Allow unfree packages
  nixpkgs.config.allowUnfree = true;

  ##############################################################################
  # Boot Configuration
  ##############################################################################
  boot = {
    loader = {
      systemd-boot.enable = true;
      efi.canTouchEfiVariables = true;
    };

    # Use latest stable kernel
    kernelPackages = pkgs.linuxPackages_latest;

    # Kernel parameters (nomodeset for server environments)
    kernelParams = [ "nomodeset" ];
  };

  ##############################################################################
  # Networking
  ##############################################################################
  networking = {
    hostName = "server";
    networkmanager.enable = true;

    # Firewall configuration
    firewall = {
      enable = true;

      # TCP ports to open
      allowedTCPPorts = [
        22              # SSH
        80              # HTTP
        443             # HTTPS
        6443            # Kubernetes API server (k3s)
        10250           # Kubelet / metrics on nodes
        2379 2380       # etcd (embedded/external)
      ];

      # UDP ports to open
      allowedUDPPorts = [
        8472            # Flannel (VXLAN) for k3s
      ];

      # Kubernetes NodePort range
      allowedTCPPortRanges = [
        { from = 30000; to = 32767; }
      ];
    };
  };

  ##############################################################################
  # SSH Configuration
  ##############################################################################
  services.openssh = {
    enable = true;
    settings = {
      PermitRootLogin = "yes";
      PasswordAuthentication = true;
    };
  };

  # Auto-login for server environments
  services.getty.autologinUser = primaryUser;

  ##############################################################################
  # Virtualization & Container Support
  ##############################################################################
  virtualisation.docker.enable = true;

  ##############################################################################
  # Tailscale VPN
  ##############################################################################
  services.tailscale.enable = true;

  ##############################################################################
  # Fonts
  ##############################################################################
  fonts.packages = with pkgs; [
    nerd-fonts.jetbrains-mono
    nerd-fonts.fira-code
  ];

  ##############################################################################
  # Environment Variables
  ##############################################################################
  environment.variables = {
    # OpenSSL configuration for compilation
    OPENSSL_LIB_DIR = "${pkgs.openssl.out}/lib";
    OPENSSL_INCLUDE_DIR = "${pkgs.openssl.dev}/include";
    PKG_CONFIG_PATH = "${pkgs.openssl.dev}/lib/pkgconfig";

    # Default editor
    EDITOR = "vim";
  };

  ##############################################################################
  # System State Version
  ##############################################################################
  # Keep this value from the initial system installation
  system.stateVersion = systemStateVersion;
}
